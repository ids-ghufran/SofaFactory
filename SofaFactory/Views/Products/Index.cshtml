@model PaginationModel<Domain.Models.Product>
@using SofaFactory.Helper;
@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_Shop_Layout.cshtml";
    ViewBag.BreadcrumbTitle = "All Products";
    ViewBag.PageTitle = "All Products";
    var method = ViewBag.Method == "Index" ? "Index" : "category";
    var path = "/Products/" + method;
    var pages = Math.Ceiling((decimal)(Model.Count / Model.PageLength));
    var formUrl = path +(string) ViewBag.QueryString;
    var ch= "";
}

<partial name="~/Views/Shared/_breadcrumb.cshtml" />

<div class="container-fluid px-5 py-5">
    
    <div class="row ">
        <div class="col-md-3">
            <div class="scroll-div">
                <div class="filter-sec mb-2">
                    <h3>FILTERS</h3>
                    <i class="fa fa-filter"></i>
                </div>
                <!-- filters Start   -->
              
                <!-- Materials Start   -->
                @if (ViewBag.filters.Materials.Count > 0)
                {
                    <h6 class="mb-4">Material</h6>
                    foreach (var ma in ViewBag.filters.Materials)
                    {
                        ch = (ViewBag.Materials.Contains(ma) ? "checked" : "");

                        <div>
                            <input type="checkbox" name="Materials" data-name="Materials" @ch value="@ma" id="@ma">
                            <label class="material-text" for="@ma"> @ma</label>
                        </div>
                        ch = "";
                    }
                    <hr>
                }


                <!--Materials End-->
                <!-- SeatingCapacities Start   -->
                @if(ViewBag.filters.SeatingCapacities.Count > 0)
                {
                    <h6 class="mb-4">Seating Capacity</h6>
                    @foreach(var m in ViewBag.filters.SeatingCapacities)
                    {
                        ch = ViewBag.SeatingCapacities.Contains(m) ? "checked" : "";
                        <div>
                            <input type="checkbox" name="SeatingCapacities" @ch data-name="SeatingCapacities" value="@m" id="@m">
                            <label class="material-text" for="@m"> @m</label>
                        </div>
                        ch = "";
                    }
                    <hr>
                }
                <!--SeatingCapacities End-->
                <!-- Sizes Start   -->
                @if(ViewBag.filters.Sizes.Count > 0)
                {
                    <h6 class="mb-4">Size </h6>
                    @foreach(var m in ViewBag.filters.Sizes)
                    {
                        ch = ViewBag.Sizes.Contains(m) ? "checked" : "";
                        <div>
                            <input type="checkbox" name="Sizes" @ch data-name="Sizes" value="@m" id="@m">
                            <label class="material-text" for="@m"> @m</label>
                        </div>
                        ch = "";

                    }
                    <hr>
                }
                <!--Sizes End-->
                <!-- StorageTypes Start   -->
                @if(ViewBag.filters.StorageTypes.Count > 0)
                {
                    <h6 class="mb-4">Storage Type </h6>
                    @foreach(var m in ViewBag.filters.StorageTypes)
                    {
                        ch = ViewBag.StorageTypes.Contains(m) ? "checked" : "";
                        <div>
                            <input type="checkbox" @ch name="StorageTypes" data-name="StorageTypes" value="@m" id="@m">
                            <label class="material-text" for="@m"> @m</label>
                        </div>
                        ch = "";
                    }
                    <hr>
                }
                <!--StorageTypes End-->

            </div>
        </div>
        <div class="col-md-9">
            <div class=" mb-3 ">
                <form action="@formUrl">
                    <div class="row ">
                        @if(User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("SubAdmin")))
                        {
                            <div class="col-md-6">
                                <a class="btn btn-outline-primary" href="/Products/create">Add Product</a>
                            </div>
                        }else{
                        <div class="col-md-6"></div>
                        }

                        <div class="col-md-6 d-flex justify-content-end">
                            <div class="form-group input-group  input-group-md">
                                <input type="text" name="query" class="form-control" required placeholder="Search" />
                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="submit">Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="row">
                @foreach(var p in Model.Model)
                {
                    var discount = p.DiscountType == Domain.Models.DiscountType.Flat ? p.Discount : (p.Price / 100) * p.Discount;
                    var amt = p.Price - (discount);
                    var discountRate = discount * 100 / (p.Price);
                    <div class="col-sm-6 col-md-6 col-lg-4">
                        <div class="product-cards mb-2" data-id="fabric-rec-sofa-set" data-category="fabric 1-seater">
                            <a href="/Products/Details/@p.ProductId">
                                <img class="card-img-top p-2" src="@p.ProductImages.First().Image.Src" alt="Card image" style="width:100%">
                            </a>
                            <div class="card-body">
                                <a class="sofa-sub-heads" href="./sinle-detail-recliner.html">@p.Name</a>
                                <p class="sofa-sub-head my-2">
                                    <strong>₹ @amt.ToString("0.00")</strong> &nbsp;&nbsp;
                                    <del>₹ @p.Price.ToString("0.00")</del> <strong class="text-success">&nbsp;&nbsp;@discountRate %</strong>
                                </p>
                                <p class="save-percent mb-1">You save ₹@discount.ToString("0.00")</p>
                                <div class="checkout-rating mb-1">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa-solid fa-star-half-stroke haif-unchecked"></span>
                                </div>
                                <a class="sofa-sub-head" href="">EMI from ₹@p.Emi.ToString("0.00")</a>
                            </div>
                        </div>
                    </div>
                }
            </div>

            @if(pages > 1)
            {
                var prevUrl = path+ QueryStringHelper.UpdateQueryStringParameters(ViewBag.QueryString, new Dictionary<string, string>() { { "page", (Model.Page - 1).ToString() } });
                var nextUrl = path+ QueryStringHelper.UpdateQueryStringParameters(ViewBag.QueryString, new Dictionary<string, string>() { { "page", (Model.Page + 1).ToString() } });
                <div class="d-flex justify-content-end align-items-center">
                    <ul class="pagination">
                        <li class="page-item"><a class="page-link" href="@prevUrl"><i class="fa fa-angle-left"></i> </a></li>
                        @for(var i = 1; i <= pages; i++)
                        {
                            var actve = Model.Page == i ? "active" : "";
                            var pageUrl = path + QueryStringHelper.UpdateQueryStringParameters(ViewBag.QueryString, new Dictionary<string, string>() { { "page", (Model.Page + 1).ToString() } });
                            <li class="page-item"><a class="page-link @actve" href="@pageUrl">@i</a></li>
                        }

                        <li class="page-item"><a class="page-link" href="@nextUrl"><i class="fa fa-angle-right"></i></a></li>
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var filters= {
            Materials:[],
            SeatingCapacities:[],
            Sizes:[],
            StorageTypes:[],
            isJson:true
        }
        let method= "@method";
        $(document).ready(()=>{
            $("input[type='checkbox']").on('change',function(){
               console.log("checked >", $(this).prop("checked"));
               let self=this;
               let checkedIp=Array.from( $("input[type='checkbox']:checked"));
               let fltrs={
                    Materials: [],
                    SeatingCapacities: [],
                    Sizes: [],
                    StorageTypes: [],
               };
               checkedIp.map((val,i)=>{
                    let name = $(val).data("name");
                    let data = encodeURIComponent($(val).val());
                    fltrs[name].push(data);
               });
                //let name = $(this).data("name");
                //let value = encodeURIComponent($(this).val());
               
                 let newFilters= {...fltrs};
                 let cn=0;
                 let url = updateQueryStringParams(window.location.href,newFilters);
                 console.log("url ", url);
                 url= "https://"+url;
                 window.location.href=url;
               
                //if(cn>0)
                  //  url = url + '&isJson=true';
                //$.ajax({
                //    url:url,               
                //    success:function(data){
                //    console.log("filters : " ,newFilters);
                //    console.log("data :" , data)
                //    },
                //    error:function(error){
                //        console.log("error : ",error);
                //    }
                //})
            });
            //-----on event end
        });

        function updateQueryStringParams(url_i, newParams) {
            const url = new URL(url_i);
            const queryParams = new URLSearchParams(url.search);

            // Update query string parameters
            for (const [param, value] of Object.entries(newParams)) {
                value.length > 0 ? queryParams.set(param, value) : queryParams.delete(param);
            }

            url.search = queryParams.toString();
            let pathname = window.location.pathname.replaceAll("/","") == "Products" ? "/Products/Index":window.location.pathname;
            // Return the updated URL path with query string
            return window.location.host + pathname+ url.search;
        }
        function extractURLComponents(url) {
            const parser = document.createElement('a');
            parser.href = url;

            const host = parser.host;
            const pathname = parser.pathname;
            const queryString = parser.search;

            return {
                host: host,
                pathname: pathname,
                queryString: queryString
            };
        }
    </script>
}